@model EduCare.Models.Users

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    System.Data.DataTable dept = EduCare.Models.AllProcs.GetDepartments();
    System.Data.DataTable designation = EduCare.Models.AllProcs.GetDesignations();
}

<h4 class="fw-bold mt-3 mb-3"><a href=@Url.Action("Index","Users") class="back-btn"><i class="fa fa-arrow-left"></i> Edit User</a></h4>
<form method="post" action="/Users/Edit">
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.UserName)
    @Html.HiddenFor(model => model.Password)
    @Html.HiddenFor(model => model.ProfilePicture)
    <div class="box box-primary">
        <div class="box-body">
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label label-required" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label label-required" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label label-required" })
                        @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control", @maxlength = "15" } })
                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.WhatsappNo, htmlAttributes: new { @class = "control-label label-required" })
                        @Html.EditorFor(model => model.WhatsappNo, new { htmlAttributes = new { @class = "form-control", @maxlength = "15" } })
                        @Html.ValidationMessageFor(model => model.WhatsappNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfJoining, htmlAttributes: new { @class = "control-label label-required" })
                        @Html.EditorFor(model => model.DateOfJoining, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateOfJoining, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmpCode, htmlAttributes: new { @class = "control-label label-required" })
                        @Html.EditorFor(model => model.EmpCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmpCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label label-required" })
                        <select id="DepartmentId" name="DepartmentId" class="form-control">
                            @for (int i = 0; i < dept.Rows.Count; i++)
                            {
                                <option value="@dept.Rows[i]["Id"].ToString()">@dept.Rows[i]["Name"].ToString()</option>
                            }
                        </select>
                        <script>$('#DepartmentId').val('@Model.DepartmentId')</script>
                        @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DesignationId, htmlAttributes: new { @class = "control-label label-required" })
                        <select id="DesignationId" name="DesignationId" class="form-control">
                            @for (int i = 0; i < designation.Rows.Count; i++)
                            {
                                <option value="@designation.Rows[i]["Id"].ToString()">@designation.Rows[i]["Name"].ToString()</option>
                            }
                        </select>
                        <script>$('#DesignationId').val('@Model.DesignationId')</script>
                        @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label " })
                        @*@Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })*@
                        <select id="Type" name="Type" class="form-control">
                            <option value="0">Admin</option>
                            <option value="1">SubAdmin</option>
                            <option value="2">User</option>
                        </select>
                        <script>$('#Type').val('@Model.Type')</script>
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Division, htmlAttributes: new { @class = "control-label " })
                        <select id="Division" name="Division" class="form-control">
                            <option value="0">Operation</option>
                            <option value="1">Sales</option>
                            <option value="2">Others</option>
                        </select>
                        <script>$('#Type').val('@Model.Type')</script>
                        @Html.ValidationMessageFor(model => model.Division, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-sm-10">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label label-required" })
                        <textarea rows="1" id="Address" name="Address" class="form-control">@Model.Address</textarea>
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })
                        <select class="form-control" id="Status" name="Status">
                            <option value="True">Active</option>
                            <option value="False">Inactive</option>
                        </select>
                        <script>$('#Status').val('@Model.Status')</script>
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2">
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
    

